name: CI/CD Pipeline

# When to trigger the workflow
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask

    - name: Test application
      run: |
        python -m unittest discover

  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize

    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}  # or use SSH keys
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest
          docker stop my-flask-app || true
          docker rm my-flask-app || true
          docker run -d -p 80:5000 --name my-flask-app ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest
